//attempt to standarde spacings
$vsmVerticalSpace: 15px;
$smVerticalSpace: 20px;
$mdVerticalSpace: 40px;
$lgVerticalSpace: 50px;
$xlVerticalSpace: 60px;

@mixin standardSpacing {
    &>* {
        margin-left: $vsmVerticalSpace;
        margin-right: $vsmVerticalSpace;

        @include media_template("sm") {
            margin-left: $smVerticalSpace;
            margin-right: $smVerticalSpace;
        }

        @include media_template("md") {
            margin-left: $mdVerticalSpace;
            margin-right: $mdVerticalSpace;
        }

        @include media_template("lg") {
            margin-left: $lgVerticalSpace;
            margin-right: $lgVerticalSpace;
        }

        @include media_template("xl") {
            margin-left: $xlVerticalSpace;
            margin-right: $xlVerticalSpace;
        }

    }

    @include media(">=xxlMin") {
        margin: auto;
        max-width: 2000px;
    }

}



$defaulFontSize:14px;
$smFontSize:16px;
$lgFontSize:18px;

@mixin standardFontsize($mod:0) {
    font-size: $defaulFontSize + $mod;

    @include media(">=smMin") {
        font-size: $smFontSize + $mod;
    }

    @include media(">=lgMin") {
        font-size: $lgFontSize + $mod;
    }

}

//breakpoints
$smMin: 576px;
$mdMin: 768px;
$lgMin: 992px;
$xlMin: 1200px;
$xxlMin: 2000px;

@function translate-media-condition($c) {
    $condMap: ("screen": "only screen",
        "print": "only print",
        "retina": "(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 1.5), (min-resolution: 120dpi)",
        ">smMin": "(min-width: #{$smMin + 1})",
        "<smMin": "(max-width: #{$smMin - 1})",
        ">=smMin": "(min-width: #{$smMin})",
        "<=smMin": "(max-width: #{$smMin})",
        ">mdMin": "(min-width: #{$mdMin + 1})",
        "<mdMin": "(max-width: #{$mdMin - 1})",
        ">=mdMin": "(min-width: #{$mdMin})",
        "<=mdMin": "(max-width: #{$mdMin})",
        ">lgMin": "(min-width: #{$lgMin + 1})",
        "<lgMin": "(max-width: #{$lgMin - 1})",
        ">=lgMin": "(min-width: #{$lgMin})",
        "<=lgMin": "(max-width: #{$lgMin})",
        ">xlMin": "(min-width: #{$xlMin + 1})",
        "<xlMin": "(max-width: #{$xlMin - 1})",
        ">=xlMin": "(min-width: #{$xlMin})",
        "<=xlMin": "(max-width: #{$xlMin})",
        ">xxlMin": "(min-width: #{$xxlMin + 1})",
        "<xxlMin": "(max-width: #{$xxlMin - 1})",
        ">=xxlMin": "(min-width: #{$xxlMin})",
        "<=xxlMin": "(max-width: #{$xxlMin})"

    );
    @return map-get($condMap, $c);

}

@mixin media($args...) {
    $query: "";

    @each $arg in $args {
        $op: "";

        @if ($query !="") {
            $op: " and ";
        }

        $query: $query+$op+translate-media-condition($arg);
    }

    @media #{$query} {
        @content;
    }
}

@mixin media_template($arg) {
    @if $arg=="sm" {
        @include media(">=smMin", "<mdMin") {
            @content;
        }
    }

    @else if $arg=="md" {
        @include media(">=mdMin", "<lgMin") {
            @content;
        }
    }

    @else if $arg=="lg" {
        @include media(">=lgMin", "<xlMin") {
            @content;
        }
    }

    @else if $arg=="xl" {
        @include media(">=xlMin") {
            @content;
        }
    }
}